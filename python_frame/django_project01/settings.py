"""
Django settings for django_project01 project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import corsheaders

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'c51*_3r#(o_8!c$p!98rt81bvgp9r5(0((a!nc167fjr=#$9-)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# false 将所有 错误页面 返回 404
# DEBUG = False

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    # sessions
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 注册 新的app
    'app_book',
    'app_movie',
    'common',
    'db_001',
    'db_002',
    'myblog',
    'Online_Course',
    'corsheaders',
]

# 注册中间件
MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',

    'django.middleware.security.SecurityMiddleware',
    # sessions
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',

    # 检测 csrf_token的中间件
    'django.middleware.csrf.CsrfViewMiddleware',

    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # 新增的
    'django_project01.mymiddleware.MyException',

]

ROOT_URLCONF = 'django_project01.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',

        # 拼接 html模板文件
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {

            # 注册上下文处理器
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',  # 包含 {{ user }} 模板变量
                'django.contrib.messages.context_processors.messages',

                # 新增的
                # 'django_project01.Context_Processor.context_processor',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_project01.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases


DATABASES = {
    # 默认Django数据库
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    # }
    'default': {  # 如果没有指定 数据库，默认使用 该数据库
        'ENGINE': 'django.db.backends.mysql',  # 数据库引擎
        # 登录数据库
        'USER': 'admin',  # 用户名
        'PASSWORD': 'qwe123',  # 密码
        'NAME': 'MY_Django001',  # 数据库名
        # 'HOST': '192.168.0.254',  # IP地址
        'HOST': '192.168.194.234',  # 大局域网(zerotier) IP地址
        'PORT': 3306,  # 端口
    },
    'db2': {
        'ENGINE': 'django.db.backends.mysql',  # 数据库引擎
        # 登录数据库
        'USER': 'admin',  # 用户名
        'PASSWORD': 'qwe123',  # 密码
        'NAME': 'Myblog',  # 数据库名
        # 'HOST': '192.168.0.254',  # IP地址
        'HOST': '192.168.194.234',  # 大局域网(zerotier) IP地址
        'PORT': 3306,  # 端口
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        }  # mysql使用严格模式，不指定会有警告信息
    },
    'db3': {
        'ENGINE': 'django.db.backends.mysql',  # 数据库引擎
        # 登录数据库
        'USER': 'admin',  # 用户名
        'PASSWORD': 'qwe123',  # 密码
        'NAME': 'Online_Course_answer',  # 数据库名
        # 'HOST': '192.168.0.254',  # IP地址
        'HOST': '192.168.194.234',  # 大局域网(zerotier) IP地址
        'PORT': 3306,  # 端口
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        }  # mysql使用严格模式，不指定会有警告信息
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

# 修改语言
LANGUAGE_CODE = 'zh-hans'
# 修改时区
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True
# 修改 为false
USE_TZ = False

# 静态文件 Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
# 拼接 静态文件夹的路径
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

# 配置 音视频，保存的路径 ,注意 是字符串的拼接 不用写 圆括号，中括号
MEDIA_ROOT = os.path.join(BASE_DIR, 'static/media')

# 跳转登录页面
LOGIN_URL = '/db_002/login/'


# test_django为项目名，database_router为路由文件名，DatabaseAppsRouter为路由中创建的类名
DATABASE_ROUTERS = ['django_project01.database_router.DatabaseAppsRouter']
# 设置 数据库路由表
DATABASE_APPS_MAPPING = {
    'myblog': 'db2',
    'Online_Course': 'db3'
}


# 添加 django-cors-headers 的白名单, 使白名单中的 host 可以进行跨域请求
CORS_ORIGIN_WHITELIST = (
    'http://192.168.0.254:8000',
    'http://127.0.0.1:8000',
    'http://localhost:8000',

)

CORS_ALLOW_CREDENTIALS = True

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
    'VIEW',
)

CORS_ALLOW_HEADERS = (

    'authorization',
    'content-type',
    # 常用就上面两个
    'XMLHttpRequest',
    'X_FILENAME',
    'accept-encoding',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'Pragma',
)
