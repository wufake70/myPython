# _*_coding :utf-8 _*_
# @Time :2022/7/10 14:44
# @File : 001_基本数据类型
# @Project : python_NCRE

# 一、复数类型
"""
在众多的编程语言中，只有Python有复数类型
j = 根号-1 即为 复数的虚部
a + bj   即为 复数
z = a + bj 、
z.real 获取实部
z.imag  获取虚部
print(z)    输出(a+bj) 不是元组类型
"""

# 二、数值运算操作符
"""
+、-、*、/、**、//(取整)、%(取模)     共七个
注意: 除法运算时，整除的结果会保留一位小数
"""

# 三、数值运算函数
"""
1.abs(x)        表示求解x的绝对值
2.divmod(x,y)   商余操作，同时输出商数和余数，元组形式
3.pow(x,y,z)    幂余操作，先做幂运算，如果有第三个参数就做商运算并返回余数，
4.max()         最大值,传入组合数据类型,如果传入的 字典，返回的 最大的键名
5.min()         最小值，传入组合数据类型
6.math.sqrt(x)  开根号     
7.sum()         传入 序列类型 元素必须是数值，自动求和
"""
print('数值运算函数*幂余操作')
print(pow(2, 3, 4))                 # 前两位中 2是底数、3是次方数、第三位参数可以不写 4表示前两结果除以4 并取余
print('数值运算函数*商余操作')
print(divmod(8, 3))                 # (商数, 余数) 结果为(2, 2)

"""
四、常用方法
    input()         接受并保存字符串数据
    print()         end参数默认为"\n"
    type()          返回类型，type(type("")) 返回<class 'type'>
    len()           返回序列类型长度，  len(字典类型)，返回键值对的数量
    eval()          执行字符串命令，注意 字符串必须是 表达式，如 eval("9+9"),但eval("a=9+9") 就会报错
    exec()          执行字符串命令，字符串可以是任意可执行的代码，exec("a=9+9"),他没有返回值
    
    eval(input(""))
    a,b = eval(input(""))   可以将输入的 9,5 字符串,以英文逗号分割，分别赋值给 a,b
    
    round()         四舍五入，传入精度时 五舍六入
    sorted()        排序，传入组合数据类型，统一返回 list类型，不改变原数组
    chr()           返回对应 ASCII码(数字) 的字符
    old()           返回对应 字符的 ascii码
    all()           判断可迭代对象的每个元素 是否为真，全真为真，其余为假
    any()
    id()            用于获取一个对象的唯一标识符（即内存地址），一个正整数

    zip()           将多个可迭代对象 "压缩" 成一个可迭代对象，其中每个元素都是一个元组
            a = "123"
            b = [1,2,3]
            c = zip(a,b)    # zip对象，需转成list、tuple，set(),且只能转一次
            d = list(c)     # [('1', 1), ('2', 2), ('3', 3)]


    列表推导式中 if语句
    [i for i in ls if i ==0 ]
"""
img1 = [12,34,56,78]
img2 = [1,2,3,4,5]

def modi():
    global img1
    img1 = img2
    print(img1)
modi()
print(img1)













