# _*_coding :utf-8 _*_
# @Time :2022/7/15 13:47
# @File : 12linux基本使用
# @Project : python_base_payment

"""
一、ubuntu软件管理
在大多数linux 中，都有给定的软件管理工具，
比如，ubuntu 常用的是 apt，通过软件管理包来安装和更新软件等

apt 使用
sudo apt -y update          更新资源
sudo dpdg --configrue -a
sudo apt -y upgrade         更新已安装的包
sudo apt -y dist-upgrade    升级系统
注意： 以上安装过程的安装选项 直接回车或选择yes即可
sudo apt-get -y autoremove
sudo apt -y autoclean

sudo apt install -y lrzsz   安装软件
sudo apt uninstall -y lrzsz 卸载软件
sudo apt remove -y lrzsz    删除软件

注意：
su 切换用户；
sudo 零时提权: 如： 在普通用户下 使用sudo useradd -g wufake_group -m wufake_3 创建一个新用户，
并且加入wufake_3 的用户组中 ，还同时创建了 登录目录（reboot 可直接登录），sudo 使用条件是 该普通用户
必须 在sudo的配置文件里面 ，否则报错，零时提权使用的密码是当前用户的密码。首次提权 成功后 有十几分钟的
权限，不用在输入密码
bash

二、用户和用户组
0.用户 和 用户组（ 基本组 ， 附加组）的关系
基本组：如果没有指定用户组，创建用户的时候系统会默认同时创建一个和这个用户名同名的组，
    这个组就是基本组，不可以把用户从基本组中删除。在创建文件时，文件的所属组就是用户的基本组。
附加组：除了基本组之外，用户所在的其他组，都是附加组。用户是可以从附加组中被删除的。
    用户不论为与基本组中还是附加组中，就会拥有该组的权限。一个用户可以属于多个附加组。
    但是一个用户只能有一个基本组。

1.可以给每一个人建立一个用户（linux中 用户不能独立于 用户组外），各自的文件就在各自的用户家目录下
    一个用户创建了 一个文件 ，他是该文件的所有者，他可以修改自己对文件的操作权限（使用ls -l 查看具体权限）
    也可以修改 自己所在的用户组（其他成员）的对这文件操作权限，
    也可以修改 其他用户组（非本组成员）的……权限，
    就是不能修改 不是自己所创建的文件的权限
============================
groups          查看当前登录用户的用户组（基本组 附加组）
groups gliethttp 查看gliethttp用户所在的组,以及组内成员
whoami          查看当前登录用户名
/etc/group      文件包含所有组
/etc/shadow     系统存在的所有用户名
/etc/passwd     系统存在的所有用户名
============================
2.添加 / 删除 用户 （只用超级用户 有权限 ，也可修改配置文件
useradd ***  （默认不加参数，新建一个用户 就会新建一个用户组）
-g              指定初始用户组 增加新用户
-G              指定附加组
-m              自建立用户登入目录

注意： 创建好新用户后 ，立即使用 passwd *** 设置 其密码 ，方便在不同用户之间切换，
不设置密码 ，只能先切回root 超级用户 后 ，在在登录到没有密码的用户

userdel -r ***  删除指定用户（也可直接使用 vim编辑器 ， 编辑该目录 /etc/passwd 下的配置文件 ，
删去指定用户的信息）

3.添加 / 删除 用户组（只用超级用户 才有权限，当然也直接修改配置文件）
groupadd ***        添加
groupdel ***        删除

4.修改用户组
usermod [param] ***
-c              修改用户账号的备注文字
-d              修改登录目录
-g              修改用户所属的群组
-l              修改用户账号名称
-L              锁定用户密码，使用密码无效
-s              修改用户登入后所使用的shell
-u              修改用户id号
gpasswd -a username newgroup        将用户加入新的用户组（附加组）

5.切换 用户的 基本组 （用于更改 文件的 所属组）
newgrp *** 指定 相应的附加组 ，使其成为 基本组
不指定时 依次切换

6.为普通用户 修改 /etc/sudoers 配置文件（使其 正常提权）
切换到root用户下，修改/etc/sudoers 内容（如果没有写入权限，chmod u+w sudoers 即可）
找到这行 root ALL=(ALL) ALL,在他下面添加xxx ALL=(ALL) ALL (这里的xxx是你的用户名)

ps:这里说下你可以sudoers添加下面四行中任意一条
xxx            ALL=(ALL)                ALL
%xxx          ALL=(ALL)                ALL
xxx            ALL=(ALL)                NOPASSWD: ALL
%xxx         ALL=(ALL)                NOPASSWD: ALL

第一行:允许用户youuser执行sudo命令(需要输入密码).
第二行:允许用户组youuser里面的用户执行sudo命令(需要输入密码).
第三行:允许用户youuser执行sudo命令,并且在执行的时候不输入密码.
第四行:允许用户组youuser里面的用户执行sudo命令,并且在执行的时候不输入密码.

7.使用 id
查看当前的用户id 基本组id 附加组id

三、文件权限（需要提权）
使用  ls -l  查看当前路径下所有文件相关信息，并以列表形式显示（一般情况下，白色为文件 蓝色为文件夹）
其参数解析：
-rw-r--r-- 1 bd bd 8980 九月 25 17:06 examples.desktop
第一列参数 有两种'-'表示文件,'d'表示文件夹 目录
第二到第四列  表示该文件的所属者的权限‘r’表示 可读 ‘w’表示 可写入 ‘x’表示 可执行 ‘-’表示 不可
第五到第七列  表示该文件的所属组的权限 …………
第八到第十列  表示该文件的其他人的权限 …………
列中 1 表示 硬链接数
…………

1.改变文件权限
chmod u+w ***       u表示 文件所属者 （g 表示所属组，o 表示 其他人）‘+’表示增加某个权限 ’
‘-’表示 撤销某个权限

2.改变文件的 所属组
chgrp newgroup ***

3.改变所属主（者）
chown newuser

四、文件编辑（vim 主要 、 vi）

五、命令查找
1.命令搜索
whereis         搜索命令（命令文件）的位置 和 帮助文档的位置
which           搜索位置 和 命令的别名

2.find 命令 （格式： find [-path] -options
path        表示要在哪个路径下查找 ，默认情况下在当前目录下
-name       按文件名的某种规则进行查找
文件明的规则（* 为通配符 匹配任意内容、 ？ 为 任意匹配一个字符、 [] 匹配任意一个中括号内的字符
例如： find -name '*.pyc'

-size       按文件的大小查找
-type       按文件的类型（f 为普通文件、l 为符号连接、d 为目录）

3.xargs 命令（与find命令结合使用，用管道 '|' 符链接 ,find命令 可以把匹配到文件传给xargs命令
，然后进行执行）
find ………… | xargs ……    （执行多命令）
例如： find ./ -name '*.py' | xargs cat (查看搜索到的文件的内容）

可以使用 sudo Python3 ***.py 来执行Python文件（必须提权）

4.grep命令 （显示文件的内容） 格式： grep -param file
-c      计算符合样式的列数
-i      忽略字符大小写的差别
-n      显示时标出序号
-s      不显示错误信息
-v      反转查找





"""



























